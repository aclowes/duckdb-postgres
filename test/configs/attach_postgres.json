{
  "description": "Run on Postgres database as storage.",
  "on_init": "ATTACH 'postgres:dbname=postgresscanner' AS pgdb; CALL postgres_execute('pgdb', 'DROP DATABASE IF EXISTS \"{BASE_TEST_NAME}\"', use_transaction = False); CALL postgres_execute('pgdb', 'CREATE DATABASE \"{BASE_TEST_NAME}\"', use_transaction = False); DETACH pgdb; ATTACH 'postgres:dbname={BASE_TEST_NAME}' AS pgdb;",
  "on_new_connection": "USE pgdb;",
  "on_cleanup": "ATTACH 'postgres:dbname=postgresscanner' AS exit_db; CALL postgres_execute('exit_db', 'DROP DATABASE IF EXISTS \"{BASE_TEST_NAME}\"', use_transaction = False); DETACH exit_db;",
  "skip_compiled": "true",
  "statically_loaded_extensions": [
    "core_functions",
    "postgres_scanner"
  ],
  "skip_error_messages": [
    "RETURNING is not implemented for Postgres yet",
    "RETURNING clause not yet supported for insertion into Postgres table",
    "SET DEFAULT is not yet supported for updates of a Postgres table",
    "Composite types in Postgres must be named",
    "Vacuum is only implemented for DuckDB tables",
    "Postgres databases do not support creating sequences"
  ],
  "skip_tests": [
    {
      "reason": "Contains explicit use of the memory catalog.",
      "paths": [
        "test/sql/show_select/test_describe_all.test",
        "test/sql/catalog/function/attached_macro.test",
        "test/sql/catalog/test_temporary.test",
        "test/sql/pragma/test_show_tables_temp_views.test",
        "test/sql/pg_catalog/system_functions.test",
        "test/sql/pg_catalog/sqlalchemy.test",
        "test/sql/attach/attach_table_info.test",
        "test/sql/attach/attach_defaults.test",
        "test/sql/attach/attach_did_you_mean.test",
        "test/sql/attach/attach_default_table.test",
        "test/sql/attach/attach_show_all_tables.test",
        "test/sql/attach/attach_issue7711.test",
        "test/sql/attach/attach_issue_7660.test",
        "test/sql/attach/show_databases.test",
        "test/sql/attach/attach_views.test",
        "test/sql/copy_database/copy_table_with_sequence.test",
        "test/fuzzer/sqlsmith/current_schemas_null.test",
        "test/sql/settings/drop_set_schema.test",
        "test/sql/catalog/test_set_search_path.test",
        "test/sql/attach/attach_table_constraints.test",
        "test/sql/table_function/database_oid.test",
        "test/sql/table_function/duckdb_schemas.test",
        "test/sql/table_function/duckdb_tables.test",
        "test/sql/table_function/test_information_schema_columns.test",
        "test/sql/settings/setting_preserve_identifier_case.test",
        "test/sql/pragma/test_pragma_database_list.test",
        "test/sql/index/art/storage/test_art_duckdb_versions.test",
        "test/sql/copy_database/copy_database_with_index.test",
        "test/sql/table_function/information_schema.test",
        "test/sql/table_function/duckdb_databases.test",
        "test/sql/table_function/sqlite_master.test",
        "test/sql/table_function/duckdb_columns.test",
        "test/sql/table_function/sqlite_master_quotes.test"
      ]
    }
  ]
}
